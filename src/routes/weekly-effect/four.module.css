.container {
  --gap: clamp(1rem, 5%, 3rem);
  --full: minmax(var(--gap), 1fr);
  --feature: minmax(0, 5rem);
  --popout: minmax(0, 2rem);
  --content: min(50ch, 100% - var(--gap) * 2);

  display: grid;
  grid-template-columns:
    [full-start] var(--full)
    [feature-start] var(--feature)
    [popout-start] var(--popout)
    [content-start] var(--content) [content-end]
    var(--popout) [popout-end]
    var(--feature) [feature-end]
    var(--full) [full-end];

  grid-gap: 1rem 0;
}

.container > * {
  grid-column: content;
  min-height: 4rem;
  border-radius: 0.5rem;

  height: 100%;
  display: flex;
  place-content: center;
  place-items: center;
}

.container.debug > * {
  justify-content: space-between;

  &::before,
  &::after {
    writing-mode: vertical-lr;
  }
}

.content {
  background-color: #60a5fa; /* A brighter, more vibrant blue */

  &::before {
    content: "普通";
  }
  .debug &::before {
    content: "";
  }
}
.dark .content {
  background-color: #1e3a8a; /* A deep blue for dark mode */
}

.popout {
  grid-column: popout;
  background-color: #4ade80; /* A brighter, more lively green */

  &::before {
    content: "突出";
  }
  .debug &::before,
  .debug &::after {
    content: "突出边界";
  }
}
.dark .popout {
  background-color: #166534; /* A darker, muted green for dark mode */
}

.feature {
  grid-column: feature;
  background-color: #f87171; /* A brighter, more vibrant red */

  &::before {
    content: "醒目";
  }
  .debug &::before,
  .debug &::after {
    content: "醒目边界";
  }
}
.dark .feature {
  background-color: #991b1b; /* A deeper, less bright red for dark mode */
}

.full-width {
  grid-column: full;
  background-color: #c084fc; /* A brighter, more vibrant purple */
  border-radius: unset;

  &::before {
    content: "全宽";
  }
  .debug &::before,
  .debug &::after {
    content: "全宽边界";
  }
}
.dark .full-width {
  background-color: #6b21a8; /* A deeper, more subdued purple for dark mode */
}

.debug {
  position: absolute;
  grid-template-rows: 1fr;
  inset: 0;
  mix-blend-mode: multiply;

  opacity: 0;
  transition: opacity 0.3s ease-in-out;
  /* z-index: 0; */
}

.debug.show {
  opacity: 1;
}

.debug > * {
  grid-row: 1;
  border-radius: 0;
  border-inline: 2px dashed darkorange;
}

.dark .debug {
  mix-blend-mode: soft-light;
}

.dark .debug > * {
  border-inline: 2px dashed darkorange;
}

.controls-container {
  position: relative;
  z-index: 1;
  margin-block-end: 2rem;
}

@media (min-width: 1024px) {
  :not(.debug) > .full-width {
    border-radius: 0.5rem;
  }
}
